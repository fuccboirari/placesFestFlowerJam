// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using placesFestFlowerJam.InfrastructureServices.Gateways.Database;

namespace placesFestFlowerJam.WebService.Migrations
{
    [DbContext(typeof(PlacesContext))]
    [Migration("20200509130754_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("MoscowTransport.DomainObjects.Route", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Метро \"Войковская\" - Станция Ховрино",
                            Number = "591",
                            OrganizationId = 1L,
                            Type = 0
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Метро \"Селигерская\" - Станция Ховрино",
                            Number = "191",
                            OrganizationId = 1L,
                            Type = 0
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Метро \"Селигерская\" - Станция Ховрино",
                            Number = "215к",
                            OrganizationId = 2L,
                            Type = 0
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Метро \"Сокол\" - Улица Генерала Глаголева",
                            Number = "59",
                            OrganizationId = 2L,
                            Type = 1
                        });
                });

            modelBuilder.Entity("MoscowTransport.DomainObjects.TransportOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeZone")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSite")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TransportOrganizations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "ООО \"Трансавтолиз\"",
                            TimeZone = "Europe/Moscow",
                            WebSite = "http://avtoline.ru"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "ГУП \"Мосгортранс\"",
                            TimeZone = "Europe/Moscow",
                            WebSite = "http://mosgortrans.ru"
                        });
                });

            modelBuilder.Entity("MoscowTransport.DomainObjects.Route", b =>
                {
                    b.HasOne("MoscowTransport.DomainObjects.TransportOrganization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
